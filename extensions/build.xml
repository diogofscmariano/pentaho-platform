<!--===========================================================================
  This is the build file for the Pentaho BI Platform API project.
  
  This build file will use the subfloor.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See common_build.xml for more details
============================================================================-->
<project name="extensions" basedir="." default="default" xmlns:ivy="antlib:org.apache.ivy.ant">

	<description>
	  This build file is used to create the API project
		and works with the subfloor.xml file.
	</description>

	<!-- The continuous target is used by CI ... this is the list of -->
	<!-- tasks that the CI machine will run.                         -->
	<!-- DO NOT change the CI machine's ant task .. change this list -->
	<target name="continuous" 
	        depends="clean-all,resolve,cobertura,publish" />

	<!-- Import the common_build.xml file which contains all the default tasks -->
	<import file="build-res/subfloor.xml"/>

    <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN common_build.xml.
    --> 
	

	<property name="enunciate.home" value="${basedir}/enunciate" />
	<property name="enunciate.bin.dir" value="${bin.dir}/enunciate" />
	
	<!-- Override package to just do enunciate. there is no native assembly or package involved -->
	<target name="package" depends="enunciate"/>
	<target name="assemble"/>
	
	<!-- Override resolve to tack on a resolve of enunciate jars needed for doc generation -->
	<target name="resolve" depends="subfloor.resolve, resolve-enunciate" />
	<target name="resolve-enunciate" depends="resolve-init">
		<ivy:resolve file="${ivyfile}" conf="enunciate" />
		<ivy:retrieve conf="enunciate" pattern="${basedir}/enunciate/lib/[module]-[revision](-[classifier]).[ext]" />
	</target>

  <property name="jmeter.dir" value="${bin.dir}/jmeter" />
  <target name="gen-jmeter-full" depends="resolve,dist,gen-jmeter"></target>

  <target name="gen-jmeter">
    <path id="build.classpath">
      <fileset dir="${dist.dir}">
        <include name="${ivy.artifact.id}-${project.revision}.jar" />
      </fileset>

      <fileset dir="${lib.dir}">
        <include name="*.jar" />
      </fileset>
    </path>

    <mkdir dir="${bin.dir}/jmeter" />

    <java classname="org.pentaho.jmeter.Main" classpathref="build.classpath">
      <arg value="${classes.dir}" />
      <arg value="${jmeter.dir}/out.csv" />
    </java>
  </target>
  
  <property name="lib-wadl.dir" value="${lib.dir}-wadl" />

  <target name="wadl-javadoc" depends="javadoc.init, compile, subfloor.install-ivy">
    <mkdir dir="${lib-wadl.dir}"/>

    <ivy:resolve organisation="com.sun.jersey" module="jersey-server" revision="1.16" inline="true" transitive="false" />
    <ivy:retrieve organisation="com.sun.jersey" module="jersey-server" revision="1.16" inline="true" transitive="false" pattern="${lib-wadl.dir}/[artifact]-[type]-[revision].[ext]" />

    <ivy:resolve organisation="xerces" module="xercesImpl" revision="2.9.1" inline="true" transitive="false"/>
    <ivy:retrieve organisation="xerces" module="xercesImpl" revision="2.9.1" inline="true" transitive="false" pattern="${lib-wadl.dir}/[artifact]-[type]-[revision].[ext]"/>

    <ivy:resolve organisation="com.sun.jersey.contribs" module="wadl-resourcedoc-doclet" revision="1.19" inline="true" transitive="false"/>
    <ivy:retrieve organisation="com.sun.jersey.contribs" module="wadl-resourcedoc-doclet" revision="1.19" inline="true" transitive="false" pattern="${lib-wadl.dir}/[artifact]-[type]-[revision].[ext]" />

    <ivy:resolve organisation="pentaho" module="pentaho-platform-build-utils" revision="${project.revision}" inline="true" transitive="false" />
    <ivy:retrieve organisation="pentaho" module="pentaho-platform-build-utils" revision="${project.revision}" inline="true" transitive="false" pattern="${lib-wadl.dir}/[artifact]-[type]-[revision].[ext]"/>
    
    <javadoc sourcepath="${basedir}/src"
             access="public"
             source="6"
             postProcessGeneratedJavadocs="false"
             packagenames="*">
      <classpath refid="classpath" />
      <doclet name="org.pentaho.wadl.PentahoResourceDoclet" path="${lib-wadl.dir}/jersey-server-jar-1.16.jar;${lib-wadl.dir}/xercesImpl-jar-2.9.1.jar;${lib-wadl.dir}/wadl-resourcedoc-doclet-jar-1.19.jar;${lib-wadl.dir}/pentaho-platform-build-utils-jar-TRUNK-SNAPSHOT.jar">
      </doclet>
    </javadoc>
    
    <move file="wadlExtension.xml" todir="dist/"/>
    
    <delete dir="${lib-wadl.dir}"/>
  </target>
</project>
